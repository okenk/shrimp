---
editor: visual
format: docx
crossref:
  ref-hyperlink: false
  fig-title: "Fig. S"
  fig-prefix: "Fig. S"
  tbl-title: "Table S"
  tbl-prefix: "Table S"
bibliography: references.bib
---

# Supplemental figures

```{r opts, echo = FALSE, include = FALSE, warning = FALSE, message = FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, dpi = 500)
library(here)
library(ggplot2)
library(rstan)
source(here('code/length_data_manip.R'))
mod <- readRDS(here('code/covars/base.rds'))
load(here('code/rpr.rdata'))
theme_set(ggsidekick::theme_sleek())

list_of_draws <- rstan::extract(mod)

calc_fitted_vals <- function(list_of_draws, y.mat, complete.data, 
                             y.df) {
  med.pred <- list_of_draws$pred_vec %>%
    apply(2, median)
  pred.mat <- matrix(nrow = nrow(y.mat), ncol = ncol(y.mat), 
                     dimnames = list(rownames(y.mat), colnames(y.mat)))
  for(ii in 1:nrow(complete.data)) {
    pred.mat[complete.data[ii,1], complete.data[ii,2]] <- med.pred[ii] 
  }
  
  length.fits <- as_tibble(pred.mat + mean(y.mat, na.rm=TRUE)) %>%
    bind_cols(select(y.df, Area, Year_Class)) %>%
    gather(key = 'Age_Month', value = 'MedPredLength', -Area, -Year_Class) %>%
    mutate(Age_Month = as.numeric(Age_Month),
           Age = floor(Age_Month),
           Month_Num = round(12*(Age_Month - Age))) %>% 
    select(-Age_Month) %>%
    right_join(lengths)
  
  return(length.fits)
}
```

```{r}
#| label: tbl-bioecon-model-pars
#| tbl-cap: "Revenue-per-recruit model parameters"

tibble(Symbol = c("$M_s$", "$M_w$", "$aL^b$", "$\\text{Price}=b_0+b_1\\text{CPP}$"),
       Description = c("Summer natural mortality (Gallagher et al., 2004)",
                       "Winter natural mortality (Gallagher et al., 2004)",
                       "Weight-length relationship",
                       "Price-count per pound relationship"),
       Value = c('0.09 mo$^{-1}$',
                 '0.06 mo$^{-1}$',
                 '$a = 0.00126$, $b = 2.78$ for length in mm, weight in g',
                 '$b_0=1.4390$ (\\$), $b_1 = -0.00387$ (\\$ lbs)')
       ) |>
  knitr::kable(escape = FALSE, align = c('l', 'l'))
```

{{< pagebreak >}}

![Map of the state statistical areas for fishery and landings data along the U.S. west coast.](../figures/shrimp_areas.png){#fig-map width="4in"}

{{< pagebreak >}}

```{r}
#| label: fig-lw-mod
#| fig-cap: Length-weight data with fitted model

weight.dat <- readxl::read_excel(here('Data/Kiva.xlsx'), sheet = 'weights')
weight.length.mod <- lm(log(Weight) ~ log(CL), data = weight.dat)

weight.dat |>
  mutate(pred_wt = exp(coef(weight.length.mod)[1] + 0.5 * sigma(weight.length.mod)^2) * 
           CL^coef(weight.length.mod)[2]) |>
  ggplot() +
  geom_point(aes(x = CL, y = Weight), alpha = 0.05) +
  geom_line(aes(x = sort(CL), y = pred_wt[order(CL)]), col = 'red') +
  labs(x = 'Carapace length (mm)', y = 'Weight (g)')
```

{{< pagebreak >}}

```{r}
#| label: fig-model-fits
#| fig-cap: "Posterior predicted distribution (PP Length) and observed data for the base model. Each tick on the x-axis is one month; solid vertical lines separate years. Data replicates are across state areas and years."
#| cache: true

fitted_df <- calc_fitted_vals(list_of_draws = list_of_draws, y.mat = y.mat, complete.data = complete.data, y.df = y.df)
# fitted_df retains order of y.vec, unlike lengths

obs <- fitted_df$Avg_Len
obs_pp <- apply(list_of_draws$y_pp, 1, \(x) x + mean(y.vec)) |> t()

bayesplot::ppc_violin_grouped(y = obs, yrep = obs_pp, group = round(fitted_df$Age_Month, 2), y_draw = 'points', y_alpha = 0.25) +
  labs(y = 'Length (mm)', x = 'Age') +
  geom_vline(xintercept = c(7.5,14.5)) +
  theme(axis.text.x = element_blank()) +
  annotate(geom = 'text', x = c(3.75, 10.75, 17.75), y = rep(30, 3), label = paste('Age', 1:3), hjust = 'center') +
  bayesplot:::scale_fill_ppc(values = c(NA, 
        bayesplot:::get_color("l")), labels = c('Obs. length', 'PP Length')) +
  bayesplot:::scale_color_ppc(labels = c('Obs. length', 'PP Length'))
```

{{< pagebreak >}}

```{r}
#| label: fig-process-errs
#| fig-cap: "Growth model process errors by age. Each box represents one month. Numbers are the average numbers of shrimp measured each month per state area per year. They are offset from the process errors to emphasize that each process error relies on measurements during two consecutive months. Adjacent wintertime distributions look identical because no data are collected during those months (i.e., blank spaces indicate sample sizes of zero). Individual points are process errors outliers falling beyond 1.5 times the interquartile range of process errors for that month"
#| fig-width: 7.5
yr.seq <- sort(unique(lengths$Year_Class))
# Var2 is monthly time steps
# Var3 is cohort
N.count <- lengths |>
  group_by(Age_Month) |>
  summarize(N = round(mean(N, na.rm = TRUE), 0))

reshape2::melt(list_of_draws$pro_dev,
               value.name = 'pro_dev') %>%
  mutate(Year_Class = yr.seq[Var3],
         Age_Month = round(as.numeric(
           names(y.df)[-(1:3)][Var2]),2)) |>
  group_by(Age_Month, Year_Class) |>
  summarize(pro_dev = mean(pro_dev)) |>
  mutate(winter = Age_Month %in% c(1.83, 1.92, 2, 2.08, 2.17, 2.25,
                                   2.83, 2.92, 3, 3.08, 3.17, 3.25),
         year_month = Year_Class + Age_Month,
         pro_dev_yr = floor(year_month)-1) |>
  # filter(!winter) |>
  ggplot() +
  # geom_raster(aes(x = pro_dev_yr, y = Age_Month, fill = pro_dev), pointsize = 3) +
  # scale_fill_gradientn(colours = rev(LaCroixColoR::lacroix_palette('Orange', 10))) +
  # geom_hline(yintercept = 2) +
  # geom_hline(yintercept = 3) +
  # labs(x = 'Year', y = 'Age')
  geom_boxplot(aes(x = Age_Month, y = pro_dev, group = Age_Month, fill = winter)) +
  geom_text(aes(x = Age_Month-1/24, y = 0.3, label = N), data = N.count, size = 2) +
  geom_hline(yintercept = 0) +
  theme_classic() +
  scale_fill_manual(values = c('tomato', 'royalblue3'), labels = c(`TRUE` = 'Winter', `FALSE` = 'Summer')) +
  labs(x = 'Age (yrs)', y = 'Process error (mm)', fill = '')

```

# Assigning ages

Ocean shrimp are aged using length-frequency analysis for each area-month-year distribution combined with biological understanding of the life history of shrimp according to Hannah and Jones [-@hannah1991]. Robust data from an intensive and long-term biological sampling program combined with the fast growth and short lives of ocean shrimp allows nadirs to be easily visually identified and used to assign age and identify modal length (Fig. S[-@fig-ageing]). Biologists have found that automated analysis such as MIX modal analysis, MULTIFAN and ELEFAN have key limitations and are not currently readily adaptable to the complicated life history of pandalid shrimp. For example, automated tools cannot handle the bifurcation of the size distribution of age 1 shrimp that occurs when there are a large proportion of primary females, as occurred during 2009. In this case, the distribution of age 1 shrimp late in the season, around September and October, is biomodal, with primary females growing to larger sizes since they will not be able to molt for many months. Automated tools are also ill-suited to handle the variable number of cohorts observed. For example, in September and October, there is often (though not always) a small mode for age 0 shrimp that are starting to settle into benthic habitats, but are not caught earlier during the fishing season. This subjective method used incorrectly ages some individuals, but any measure of central tendency of length-at-age (e.g., mode, mean) should be much more robust to these errors. Because our growth model uses mean length-at-age as the main data source (i.e., the red dots in Fig. S[-@fig-ageing]), we felt this ageing method was sufficient for our purposes. We acknowledge that the mean length-at-age for age 3 shrimp, which are less abundant in the catch than age 1 and 2 shrimp, are precise. We do not have reason to think the mean is consistently biased. In addition, while there are far fewer age 3 individuals, there are also fewer mean lengths for age 3 shrimp across all areas and years, particularly after the first two months of the fishing season when the age 3 mode is more apparent and boats tend to target older shrimp (Figs. S[-@fig-process-errs], S[-@fig-ageing]).

```{r}
#| label: fig-ageing
#| fig-cap: "Length frequency histograms for two representative areas and years to validate age assignments. Red points are the average lengths of each year-month-area-age combination that are used in the growth model. Vertical dotted lines are either the applied breakpoint between adjacent ages or the minimum/maximum length for an age, if there are assumed to be no observations of older or younger individuals."
#| fig-width: 7.5
#| fig-height: 6
#| cache: true

# largest sample sizes: 21, 22, 26
indiv_len <- readxl::read_excel('../Data/allshrimp.xlsx', sheet = 'rework')
areas <- c(21:22)
yrs <- 2008:2009

avg_len <- lengths |>
  filter(Year %in% yrs, Area %in% areas) |>
  dplyr::mutate(Area = paste('Area', Area))

breaks <- dplyr::filter(indiv_len, Year %in% yrs, Area %in% areas) |>
  dplyr::group_by(MO., Year, Area, Age) |>
  dplyr::summarise(min_len = min(CL),
                   max_len = max(CL)) |>
  dplyr::mutate(Area = paste('Area', Area)) |>
  tidyr::pivot_wider(names_from = Age, values_from = c(min_len, max_len)) |>
  dplyr::group_by(MO., Year, Area) |>
  # filter(Area == 'Area 22', Year == 2010) |>
  dplyr::mutate(`1` = mean(c(max_len_0, min_len_1), na.rm = TRUE),
                `2` = mean(c(max_len_1, min_len_2), na.rm = TRUE),
                `3` = mean(c(max_len_2, min_len_3), na.rm = TRUE),
                `4` = max_len_3) |>
  dplyr::select(MO., Year, Area, `1`, `2`, `3`, `4`) |>
  tidyr::pivot_longer(`1`:`4`, names_to = 'age_break', values_to = 'CL') |>
  dplyr::filter(!is.na(age_break))

indiv_len |> 
  # dplyr::count(Area)
  dplyr::filter(Year %in% yrs, Area %in% areas) |>
  dplyr::mutate(Area = paste('Area', Area)) |>
  ggplot() +
  ggridges::geom_density_ridges(aes(x = CL, y = MO., group = MO.), scale = 1, 
                                stat = 'binline', bins = 25) +
  geom_point(aes(x = Avg_Len, y = Month_Num - 0.25), col = 'red', data = avg_len) +
  geom_linerange(aes(x = CL, ymin = MO.-0.9, ymax = MO.), data = breaks, linetype = 'dotted') +
  facet_grid(Year ~ Area) +
  scale_y_reverse(breaks = 2*2:5, labels = c('Apr', 'Jun', 'Aug', 'Oct'), name = 'Month') +
  xlab('Carapace length (mm)')



```

# Price model

The price per pound for ocean shrimp (*Pandalus jordani*) landed in Oregon varies substantially from year to year without any clear seasonal or annual trends. Modeling the expected absolute price of ocean shrimp accurately would be extremely challenging and is beyond the scope of this study. Our primary interest here is to understand whether and how price varies with the size of shrimp as measured by count per pound. Prices tend to increase with size of the shrimp which is an important consideration when modeling revenue per recruit as a function of fishing mortality since maximum revenue-per-recruit will be achieved at relatively lower mortality levels when price increases with size relative to an assumption of constant price.

We fit price models to data from fish tickets in the PacFIN (Pacific Fishery Information Network; https://pacfin.psmfc.org/) database between 2017-2020 that could be matched with ODFW biological port sampling data on count count per pound. Because prices are highly variable year-to-year and month-to-month without any clear trends, we use a fixed effect model with fixed effects for each year-month combination in the data. This allowed us to isolate the effect of count-per-pound on price. We tried several different specifications including taking natural logs of price or count-per-pound or both. The candidate models all yield fairly similar relationships between count-per-pound and price (@fig-price-mod1) with little appreciable difference in how price changes. For simplicity, in our bioeconomic model, we use the simplest linear model formulation with both the dependent variable (price) and the explanatory variable (count-per-pound) untransformed and fixed effects for year-month combinations.

The overall fit and predictive power of the model are poor, but the relationship between count-per-pound and price is statistically significant (*p*=0.001) (Table S[-@tbl-price-mod]) and is robust to the specification (@fig-price-mod1). As expected, count-per-pound had a negative effect on price, reducing price-per-pound by around 20% over the range of commonly landed sizes (Fig. S[-@fig-price-mod2]).

```{r}
#| label: tbl-price-mod
#| tbl-cap: Fixed effect model of Oregon ocean shrimp price

options(knitr.kable.NA = '')
tibble::tibble(Variable = c('Count per pound', 'Constant', '$\\sigma_u$',
                            '$\\sigma_e$', '$\\rho$'),
               Coef = c(-0.004, 1.431, 0.202, 0.519, 0.131),
               SE = c(0.001, 0.143, NA, NA, NA),
               P = c(0.001, 0.000, NA, NA, NA),
               CI = c('(-0.006, -0.002)',
                      '(1.150, 1.711)',
                      NA, NA, NA)) |>
  knitr::kable(escape = FALSE, 
               col.names = c('Variable', 'Coef.', 'Std. Err.', 'P>t',
                             '95% Conf. Int.'))
```

![Predicted prices as a function of count-per-pound with different specifications](../figures/price_model1.png){#fig-price-mod1}

![Frequency distribution of count-per-pound for observations used in price model](../figures/price_model2.png){#fig-price-mod2}

# Literature cited
